// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Projekt2025.Models;

public partial class fgonline_dk_db_zooContext : DbContext
{
    public fgonline_dk_db_zooContext()
    {
    }

    public fgonline_dk_db_zooContext(DbContextOptions<fgonline_dk_db_zooContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Admin> Admins { get; set; }

    public virtual DbSet<Calendar> Calendars { get; set; }

    public virtual DbSet<Event> Events { get; set; }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<StudyProgram> StudyPrograms { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=mssql7.unoeuro.com;Initial Catalog=fgonline_dk_db_zoo;Persist Security Info=True;User ID=fgonline_dk;Password=aRmng352pGzdce9kwDbH");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Admin>(entity =>
        {
            entity.HasKey(e => e.AdminId).HasName("PK__Admin__719FE4E828FCE3E3");
        });

        modelBuilder.Entity<Calendar>(entity =>
        {
            entity.HasKey(e => e.CalendarId).HasName("PK__Calendar__53CFDBAD10B1EBE0");

            entity.Property(e => e.CalendarId).ValueGeneratedNever();

            entity.HasOne(d => d.Event).WithMany(p => p.Calendars)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Calendar__EventI__59FA5E80");
        });

        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.EventId).HasName("PK__Events__7944C870879663A8");
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.MemberId).HasName("PK__Member__0CF04B3874CF7C2C");

            entity.HasOne(d => d.Study).WithMany(p => p.Members).HasConstraintName("FK__Member__StudyID__52593CB8");
        });

        modelBuilder.Entity<StudyProgram>(entity =>
        {
            entity.HasKey(e => e.StudyId).HasName("PK__StudyPro__1B4BFBF80F703AC1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}